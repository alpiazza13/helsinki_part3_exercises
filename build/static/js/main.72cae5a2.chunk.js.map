{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","text","handler","value","onChange","Notification","message","className","PersonForm","props","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","deleter","name","number","onClick","id","Persons","toDisplay","map","key","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","newSearch","setNewSearch","onlyNames","setMessage","useEffect","noteService","initialPersons","showMessage","setTimeout","onlySearched","filter","toLowerCase","includes","event","target","preventDefault","personObject","window","confirm","thisPerson","newPerson","without_old","returnedPerson","concat","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72cae5a2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ text, handler }) => <div> search: <input value={text} onChange={handler}/> </div>\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"message\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\nimport Notification from './Notification'\n\nconst PersonForm = (props) =>\n    <form onSubmit={props.handler}>\n        <p> name: <input value={props.newName} onChange={props.handleNameChange}/> </p>\n        <p> number: <input value={props.newNumber} onChange={props.handleNumberChange}/> </p>\n        <button type=\"submit\"> add </button>\n        <p></p>\n        <Notification message={props.message} />\n    </form>\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({ person, deleter }) => <li> {person.name} {person.number} <button onClick={() => deleter(person.id, person.name)}> delete </button> </li>\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({toDisplay, deleter}) =>\n    <ul>\n      {toDisplay.map((person) => <Person key={person.name} person={person} deleter={deleter}/>)}\n    </ul>\n\nexport default Persons\n","import axios from 'axios'\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`)\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport noteService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const onlyNames = persons.map(person => person.name)\n  const [message, setMessage] = useState(null)\n\n  // on first rendering of the app, setPersons with the data from that url\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const showMessage = () => {\n      setMessage(`You successfully updated the phonebook - good job!`)\n      setTimeout(() => {setMessage(null)}, 5000)}\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {name: newName, number: newNumber}\n    if (!(onlyNames.includes(newName))) {\n        noteService\n        .create(personObject)\n        .then(returnedPerson => {\n         setPersons(persons.concat(returnedPerson))\n         showMessage()\n      })}\n      // else {\n      //     if (window.confirm(`${newName} is already added to the phonebook. Do you want to replace their old number with this new number?`)){\n      //         const thisPerson = persons.filter((person) => person.name === newName)[0]\n      //         const newPerson = {id: thisPerson.id, name: thisPerson.name, number: newNumber}\n      //         noteService.update(thisPerson.id, newPerson)\n      //         const without_old = persons.filter((person) => person.id !== thisPerson.id)\n      //         setPersons(without_old.concat(newPerson))\n      //         showMessage()\n      //     }}\n\n      else {\n          if (window.confirm(`${newName} is already added to the phonebook. Do you want to replace their old number with this new number?`)){\n              const thisPerson = persons.filter((person) => person.name === newName)[0]\n              const newPerson = {id: thisPerson.id, name: thisPerson.name, number: newNumber}\n              const without_old = persons.filter((person) => person.id !== thisPerson.id)\n              noteService.update(thisPerson.id, newPerson)\n              .then(returnedPerson => {setPersons(without_old.concat(returnedPerson))})\n              .catch(error => {setMessage('There has been an error. Please refresh and try again.')})\n              showMessage()\n          }\n      }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleSearchChange = (event) => setNewSearch(event.target.value)\n\n  const onlySearched = persons.filter((person) => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  const onDelete = (id, name) => {\n      if (window.confirm(`Are you sure you want to delete ${name} from the phoebook?`))\n      {noteService.remove(id)\n        setPersons(persons.filter((person) => person.id !== id))  }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter text={newSearch} handler={handleSearchChange}/>\n      <PersonForm handler={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} message={message} />\n      <h2>Numbers</h2>\n      <Persons toDisplay={onlySearched} deleter={onDelete}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}